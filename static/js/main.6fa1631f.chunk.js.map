{"version":3,"sources":["components/watch/Watch.module.css","components/section/Section.module.css","components/button/Button.module.css","components/section/Section.jsx","components/watch/Watch.jsx","components/button/Button.jsx","App.js","index.js"],"names":["module","exports","Section","children","className","css","section","Watch","valueOfTime","timer","time","Date","toISOString","slice","Button","onHandleClick","nameButton","btnColor","type","onClick","App","useState","sec","setSec","status","setStatus","countOfClick","setCountOfClick","countOfRunOrStop","setCountOfRunOrStop","useEffect","unsubscribe$","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","pauseClock","Observable","observer","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,mBCAtDD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,IAAM,sB,wKCKnEC,EAJC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,yBAASC,UAAWC,IAAIC,QAAxB,SAAkCH,K,iBCW5BI,EAZD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACf,OACE,mCACE,qBAAKJ,UAAWC,IAAII,MAApB,SACE,mBAAGL,UAAWC,IAAIK,KAAlB,SACG,IAAIC,KAAKH,GAAaI,cAAcC,MAAM,GAAI,W,iBCK1CC,EAVA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC3C,OACE,mCACE,wBAAQC,KAAK,SAASd,UAAWC,IAAIY,GAAWE,QAASJ,EAAzD,SACE,+BAAOC,SCQA,SAASI,IACtB,MAAsBC,mBAJJ,GAIlB,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,mBARR,QAQpB,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,mBARd,GAQ1B,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgDN,mBARlB,GAQ9B,mBAAOO,EAAP,KAAyBC,EAAzB,KAIAC,qBAAU,WACR,IAAMC,EAAe,IAAIC,IAQzB,OAPAC,YAZoB,KAajBC,KAAKC,YAAUJ,IACfK,WAAU,WACM,QAAXZ,GACFD,GAAO,SAACc,GAAD,OAASA,EAhBF,UAmBb,WACLN,EAAaO,OACbP,EAAaQ,cAEd,CAACf,IAEJM,qBAAU,WACa,IAAjBJ,IACFG,EA7B0B,GA8B1BJ,EAAU,WAEX,CAACC,IAEJI,qBAAU,WACiB,IAArBF,EACFH,EAAU,OACoB,IAArBG,IACTH,EAAU,QACVF,EAtCc,GAuCdM,EAxC0B,MA0C3B,CAACD,IAEJ,IAQMY,EAAa,IAAIC,KAAW,SAACC,GACjCC,YAAW,WACTD,EAASJ,KAAKX,EAvDQ,MAwDrB,KACHe,EAASJ,KAAKX,EAAgBD,EAAe,OAU/C,OACE,gCACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQX,cAVD,WACXyB,EAAWJ,UAAU,CACnBE,KADmB,aAEnBC,SAFmB,gBASYvB,WAAY,OAAQC,SAAU,SAC3D,cAAC,EAAD,CACEF,cA3BU,WAChBc,EAAoBD,EAAmB,IA2BjCZ,WAAY,eACZC,SAAU,UAEZ,cAAC,EAAD,CAAQF,cA3BA,WACZQ,EAhDgB,IA0EkBP,WAAY,QAASC,SAAU,WAE/D,cAAC,EAAD,UACE,cAAC,EAAD,CAAOT,YAAac,SCnF5BsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,eAAe,W","file":"static/js/main.6fa1631f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Watch_timer__3CnUy\",\"time\":\"Watch_time__-k1JV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1VUbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"Button_blue__3t3Tf\",\"green\":\"Button_green__1nvPf\",\"red\":\"Button_red__1lLVK\"};","import css from \"./Section.module.css\";\r\n\r\nconst Section = ({ children }) => {\r\n  return <section className={css.section}>{children}</section>;\r\n};\r\n\r\nexport default Section;\r\n","import css from \"./Watch.module.css\";\r\n\r\nconst Watch = ({ valueOfTime }) => {\r\n  return (\r\n    <>\r\n      <div className={css.timer}>\r\n        <p className={css.time}>\r\n          {new Date(valueOfTime).toISOString().slice(11, 19)}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Watch;\r\n","import css from \"./Button.module.css\";\r\n\r\nconst Button = ({ onHandleClick, nameButton, btnColor }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" className={css[btnColor]} onClick={onHandleClick}>\r\n        <span>{nameButton}</span>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { interval, Observable, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport Section from \"./components/section/Section\";\nimport Watch from \"./components/watch/Watch\";\nimport Button from \"./components/button/Button\";\n\nconst initialStatus = \"stop\";\nconst initialCountOfClick = 0;\nconst initialCountOfRunOrStop = 0;\nconst initialTime = 0;\nconst intervalOfWatch = 1000;\n\nexport default function App() {\n  const [sec, setSec] = useState(initialTime);\n  const [status, setStatus] = useState(initialStatus);\n  const [countOfClick, setCountOfClick] = useState(initialCountOfClick);\n  const [countOfRunOrStop, setCountOfRunOrStop] = useState(\n    initialCountOfRunOrStop\n  );\n\n  useEffect(() => {\n    const unsubscribe$ = new Subject();\n    interval(intervalOfWatch)\n      .pipe(takeUntil(unsubscribe$))\n      .subscribe(() => {\n        if (status === \"run\") {\n          setSec((val) => val + intervalOfWatch);\n        }\n      });\n    return () => {\n      unsubscribe$.next();\n      unsubscribe$.complete();\n    };\n  }, [status]);\n\n  useEffect(() => {\n    if (countOfClick === 2) {\n      setCountOfRunOrStop(initialCountOfRunOrStop);\n      setStatus(\"wait\");\n    }\n  }, [countOfClick]);\n\n  useEffect(() => {\n    if (countOfRunOrStop === 1) {\n      setStatus(\"run\");\n    } else if (countOfRunOrStop !== 0) {\n      setStatus(\"stop\");\n      setSec(initialTime);\n      setCountOfRunOrStop(initialCountOfRunOrStop);\n    }\n  }, [countOfRunOrStop]);\n\n  const runOrStop = function () {\n    setCountOfRunOrStop(countOfRunOrStop + 1);\n  };\n\n  const reset = function () {\n    setSec(initialTime);\n  };\n\n  const pauseClock = new Observable((observer) => {\n    setTimeout(() => {\n      observer.next(setCountOfClick(initialCountOfClick));\n    }, 300);\n    observer.next(setCountOfClick(countOfClick + 1));\n  });\n\n  const wait = function () {\n    pauseClock.subscribe({\n      next() {},\n      complete() {},\n    });\n  };\n\n  return (\n    <div>\n      <Section>\n        <Button onHandleClick={wait} nameButton={\"Wait\"} btnColor={\"blue\"} />\n        <Button\n          onHandleClick={runOrStop}\n          nameButton={\"Start / Stop\"}\n          btnColor={\"green\"}\n        />\n        <Button onHandleClick={reset} nameButton={\"Reset\"} btnColor={\"red\"} />\n      </Section>\n      <Section>\n        <Watch valueOfTime={sec} />\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}